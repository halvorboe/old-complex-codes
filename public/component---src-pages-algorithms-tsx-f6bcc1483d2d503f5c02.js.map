{"version":3,"sources":["webpack:///./src/components/sorting.tsx","webpack:///./src/pages/algorithms.tsx"],"names":["useState","update","setUpdate","items","index","push","value","Math","round","random","position","setItems","currentI","setCurrentI","currentJ","setCurrentJ","useEffect","itemsChanged","updatedItems","map","it","abs","length","setInterval","maxValue","reduce","acc","max","style","margin","key","borderRadius","left","top","display","alignSelf","height","width","backgroundColor"],"mappings":"2HAgBe,aAAM,MACSA,oBAAS,GAA9BC,EADY,KACJC,EADI,OAEOF,mBAbb,WAEb,IADA,IAAIG,EAAQ,GACHC,EAAQ,EAAGA,EALF,GAKuBA,IACvCD,EAAME,KAAK,CACTC,MAAOC,KAAKC,MANA,GAMMD,KAAKE,UACvBC,SAAU,IAGd,OAAOP,EAK4BM,IAA5BN,EAFY,KAELQ,EAFK,OAGaX,mBAAS,GAAlCY,EAHY,KAGFC,EAHE,OAIab,mBAAS,GAAlCc,EAJY,KAIFC,EAJE,KAKnBC,qBAAU,WACR,GAAIf,EACFC,GAAU,OADZ,CAIA,IAAIe,GAAe,EACbC,EAAef,EAAMgB,KAAI,SAACC,EAAIhB,GAMlC,OALIG,KAAKc,IAAIjB,EAAQgB,EAAGV,UAAY,GAClCU,EAAGV,SAAWN,EAEda,GAAe,EAEV,CACLX,MAAOc,EAAGd,MACVI,SAAUU,EAAGV,UAAYN,EAAQgB,EAAGV,UAAY,QAGpD,GAAIO,EACFN,EAASO,OACJ,CACL,GAAIN,EAvCU,GAwCZ,OAEF,GAAIE,GAAYX,EAAMmB,OAASV,EAAW,EACxCC,EAAYD,EAAW,GACvBG,EAAY,OACP,CACL,GAAIZ,EAAMW,GAAUR,MAAQH,EAAMW,EAAW,GAAGR,MAAO,CACrD,IAAMc,EAAKjB,EAAMW,GACjBX,EAAMW,GAAYX,EAAMW,EAAW,GACnCX,EAAMW,EAAW,GAAKM,EACtBT,EAASR,GAEXY,EAAYD,EAAW,QAG1B,CAACb,IACJe,qBAAU,WACRO,aAAY,WACVrB,GAAU,KACT,IAAO,OAEZ,IAAMsB,EAAWrB,EAAMsB,QAAO,SAACC,EAAKN,GAAN,OAAab,KAAKoB,IAAID,EAAKN,EAAGd,UAAS,KACrE,OACE,yBAAKsB,MAAO,CAAEC,OAAQ,KAEnB1B,EAAMgB,KAAI,SAACC,EAAIhB,GACd,OACE,yBACE0B,IAAK1B,EACLwB,MAAO,CACLG,aAAc,OACdrB,SAAU,WACVsB,KAAoB,GAAdZ,EAAGV,SAAgB,GACzBuB,IAA6B,IAAvBT,EAAWJ,EAAGd,OAAc,GAClC4B,QAAS,OACTC,UAAW,WAEXC,OAAmB,GAAXhB,EAAGd,MACX+B,MAAO,GACPC,gBAAiB,kBC5EhB,qBACb,OAAO,kBAAC,EAAD","file":"component---src-pages-algorithms-tsx-f6bcc1483d2d503f5c02.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst LIST_LENGTH = 30;\nconst MAX_VALUE = 20;\n\nconst random = () => {\n  let items = [];\n  for (let index = 0; index < LIST_LENGTH; index++) {\n    items.push({\n      value: Math.round(Math.random() * MAX_VALUE),\n      position: 0,\n    });\n  }\n  return items;\n};\n\nexport default () => {\n  const [update, setUpdate] = useState(false);\n  const [items, setItems] = useState(random());\n  const [currentI, setCurrentI] = useState(0);\n  const [currentJ, setCurrentJ] = useState(0);\n  useEffect(() => {\n    if (update) {\n      setUpdate(false);\n      return;\n    }\n    let itemsChanged = false;\n    const updatedItems = items.map((it, index) => {\n      if (Math.abs(index - it.position) < 0.1) {\n        it.position = index;\n      } else {\n        itemsChanged = true;\n      }\n      return {\n        value: it.value,\n        position: it.position + (index - it.position) / 100,\n      };\n    });\n    if (itemsChanged) {\n      setItems(updatedItems);\n    } else {\n      if (currentI > LIST_LENGTH) {\n        return;\n      }\n      if (currentJ >= items.length - currentI - 1) {\n        setCurrentI(currentI + 1);\n        setCurrentJ(0);\n      } else {\n        if (items[currentJ].value > items[currentJ + 1].value) {\n          const it = items[currentJ];\n          items[currentJ] = items[currentJ + 1];\n          items[currentJ + 1] = it;\n          setItems(items);\n        }\n        setCurrentJ(currentJ + 1);\n      }\n    }\n  }, [update]);\n  useEffect(() => {\n    setInterval(() => {\n      setUpdate(true);\n    }, 1000 / 24);\n  });\n  const maxValue = items.reduce((acc, it) => Math.max(acc, it.value), -1000000);\n  return (\n    <div style={{ margin: 50 }}>\n      {/* <div style={{ display: \"flex\", flexDirection: \"row\", margin: \"0 auto\" }}> */}\n      {items.map((it, index) => {\n        return (\n          <div\n            key={index}\n            style={{\n              borderRadius: \"20px\",\n              position: \"absolute\",\n              left: it.position * 15 + 50,\n              top: (maxValue - it.value) * 20 + 50,\n              display: \"flex\",\n              alignSelf: \"flex-end\",\n              // margin: 5,\n              height: it.value * 20,\n              width: 10,\n              backgroundColor: \"#00B0FF\",\n            }}\n          ></div>\n        );\n      })}\n      {/* </div> */}\n    </div>\n  );\n};\n","import React from \"react\";\n\nimport Sorting from \"../components/sorting\";\nimport Graph from \"../components/graph\";\n\nexport default () => {\n  return <Sorting />;\n};\n"],"sourceRoot":""}